// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class ArchiveCreated extends ethereum.Event {
  get params(): ArchiveCreated__Params {
    return new ArchiveCreated__Params(this);
  }
}

export class ArchiveCreated__Params {
  _event: ArchiveCreated;

  constructor(event: ArchiveCreated) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get ipAddress(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get pHash(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }

  get webpageUrl(): string {
    return this._event.parameters[4].value.toString();
  }
}

export class WebArchive extends ethereum.SmartContract {
  static bind(address: Address): WebArchive {
    return new WebArchive("WebArchive", address);
  }

  archivedItems(param0: Address, param1: Bytes): boolean {
    let result = super.call(
      "archivedItems",
      "archivedItems(address,bytes32):(bool)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromFixedBytes(param1),
      ],
    );

    return result[0].toBoolean();
  }

  try_archivedItems(
    param0: Address,
    param1: Bytes,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "archivedItems",
      "archivedItems(address,bytes32):(bool)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromFixedBytes(param1),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  verifyHash(_user: Address, _hash: Bytes): boolean {
    let result = super.call(
      "verifyHash",
      "verifyHash(address,bytes32):(bool)",
      [ethereum.Value.fromAddress(_user), ethereum.Value.fromFixedBytes(_hash)],
    );

    return result[0].toBoolean();
  }

  try_verifyHash(_user: Address, _hash: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "verifyHash",
      "verifyHash(address,bytes32):(bool)",
      [ethereum.Value.fromAddress(_user), ethereum.Value.fromFixedBytes(_hash)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class SetArchiveCall extends ethereum.Call {
  get inputs(): SetArchiveCall__Inputs {
    return new SetArchiveCall__Inputs(this);
  }

  get outputs(): SetArchiveCall__Outputs {
    return new SetArchiveCall__Outputs(this);
  }
}

export class SetArchiveCall__Inputs {
  _call: SetArchiveCall;

  constructor(call: SetArchiveCall) {
    this._call = call;
  }

  get _timestamp(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _ipAddress(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _pHash(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get _webpageUrl(): string {
    return this._call.inputValues[3].value.toString();
  }
}

export class SetArchiveCall__Outputs {
  _call: SetArchiveCall;

  constructor(call: SetArchiveCall) {
    this._call = call;
  }
}
